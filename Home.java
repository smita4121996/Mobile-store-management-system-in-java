/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Home.java
 *
 * 
 */
package mobilestorenew;

import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.*;
import java.util.Date;
import static sun.misc.MessageUtils.where;

/**
 *
 * 
 */
public class Home extends javax.swing.JFrame {

    /** Creates new form Home */
    int a = 0, flag = 0, b = 0, c = 0, temp, d = 0, f = 0, g = 0;
    int rows = 0;
    Object data[][];
    String col[];
    String cid, cid1, id,text="";
    String mc1, mc;
    JTable table;
    String totaldata = "";
    int bid;
    Date dat1;
    String dt1,day1,month1,year1,date1;
    
    public Home() {

        initComponents();
        //setSize(1270,1270);
        setBounds(0, 0,1760,740);
        setTitle("Home Page");
        setVisible(true);
        //setExtendedState(JFrame.MAXIMIZED_BOTH); 
        idincrement();
        //installmentcheck();
    }

    public void idincrement()
    {
        try
        {

            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection co=DriverManager.getConnection("jdbc:odbc:mobileDSN","scott","tiger");
                    Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res=st.executeQuery("select * from newbill");
            while(res.next())
            {
                bid=Integer.parseInt(res.getString(1));
            }

            st.close();
            co.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"the error is"+e);
            System.out.println(e.getMessage());
        }
            bid=bid+1;

            dat1=new Date();
            dt1=dat1.toString();
            System.out.println(dt1);
            day1=dt1.substring(8,10);
            month1=dt1.substring(4,7);
            year1=dt1.substring(24,28);


            date1=day1;
            date1+="-";
            date1+=month1;
            date1+="-";
            date1+=year1;

    }
    public void installmentcheck()
    {
        String countcid="";
        String countcname="";
        try
        {
            Connection co;
            Statement st;
            Class.forName("com.mysql.jdbc.Driver");
            co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
            st = co.createStatement();
            DateFormat sdf = new SimpleDateFormat("dd/m/yyyy");
            Date date=new Date();
            String dat=sdf.format(date);
            ResultSet res1=st.executeQuery("select cid,cname,pdate, floor(months_between("+dat+",pdate)) as diff from newcustomer_details");
            Boolean rec=res1.next();
            if(rec==false)
            {
                System.out.println("there are no records");
            }
            else
            {
                do
                {
                    String dcid=res1.getString(1);
                    String dcname=res1.getString(2);

                    int diff=Integer.parseInt(res1.getString(4));

                    if(diff>=2)
                    {
                        countcid+=dcid+"\n";
                        countcname+=dcname+"\n";
                        JOptionPane.showMessageDialog(null,"The following Customer Not Payed Their Installments from last two months\n" +
                        countcid+"\t"+countcname);
                    }

                }while(res1.next());
            }

           
            co.close();


        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"The error is :99"+e);
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem17 = new javax.swing.JMenuItem();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();

        jMenuItem17.setText("jMenuItem17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 0, 0));
        getContentPane().setLayout(null);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(110, 20, 130, 30);

        jButton1.setText("Stock");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(250, 20, 80, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Mobile Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 90, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(340, 20, 260, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Customer Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(630, 20, 100, 30);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2);
        jTextField2.setBounds(740, 20, 130, 30);

        jButton2.setText("Remainig payment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(890, 20, 121, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(1020, 20, 250, 30);

        jMenu1.setText("Mobile Phone    ");

        jMenuItem1.setText("Add Mobile Phone");
        jMenuItem1.setToolTipText("Click here to add a mobile phone");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Search Mobile Phone");
        jMenuItem3.setToolTipText("Click here to Search a Mobile Phone");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setText("Update Mobile Phone");
        jMenuItem2.setToolTipText("Click here to Update a Mobile Phone");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Delete Mobile Phone");
        jMenuItem4.setToolTipText("Click here to delete a mobile phone");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Customer    ");

        jMenuItem6.setText("Search Customer");
        jMenuItem6.setToolTipText("Click here to Search a Customer");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Update Customer");
        jMenuItem7.setToolTipText("Click here to Update Customer Details");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Delete Customer");
        jMenuItem8.setToolTipText("Click here to Delete a Customer");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem13.setText("Credit Payments");
        jMenuItem13.setToolTipText("Click here for Credit Payments");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Bill Administration    ");

        jMenuItem9.setText("Generate Bill");
        jMenuItem9.setToolTipText("Click here to Generate Bill");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Search Bill");
        jMenuItem10.setToolTipText("Click here Search a Bill");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Sales Reports    ");

        jMenuItem5.setText("Daily Reports");
        jMenuItem5.setToolTipText("Click here for Daily Reports");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem5);

        jMenuItem14.setText("Monthly Reports");
        jMenuItem14.setToolTipText("Click here for Monthly Reports");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem14);

        jMenuItem15.setText("Yearly Reports");
        jMenuItem15.setToolTipText("Click here for Yearly Reports");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem15);

        jMenuBar1.add(jMenu5);

        jMenu4.setText("User");

        jMenuItem16.setText("About System");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem16);

        jMenuItem11.setText("LogOff");
        jMenuItem11.setToolTipText("Click here to LogOff");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuItem12.setText("Exit");
        jMenuItem12.setToolTipText("Click here to Exit from the Application");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem12);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Login();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new Addmobile1();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
        new SearchMobile();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new MobileUpdate();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:

        String id1 = JOptionPane.showInputDialog(null, "Enter Mobile Phone Id (or) IMEI No");
        while (id1.equals("")) {
            JOptionPane.showMessageDialog(null, "You should have to enter something");
            id1 = JOptionPane.showInputDialog(null, "Enter Mobile Phone Id (or) IMEI No");
        }
        try {
            //Connection con;
            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //con = DriverManager.getConnection("jdbc:odbc:mobileDSN", "scott", "tiger");
                    Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newmobile_details");
            Boolean rec = res.next();
            if (!rec) {
                JOptionPane.showMessageDialog(null, "There are no mobile phones in the database");
            } else {
                do {

                    String s1 = res.getString(1);
                    String s2 = res.getString(3);
                    String s3 = res.getString(6);

                    if (id1.equalsIgnoreCase(s1) || id1.equalsIgnoreCase(s3)) {
                        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the mobile phone " + s2 + " with having mobile id:" + s1 + " and IMEI no:" + s3);
                        if (reply == JOptionPane.YES_OPTION) {
                            PreparedStatement prp = co.prepareStatement("delete from newmobile_details where phone_id=?");
                            prp.setString(1,s1);
                            prp.executeUpdate();
                            JOptionPane.showMessageDialog(null, "The mobile successfully deleted");
                            a = 1;
                        } else if (reply == JOptionPane.NO_OPTION) {
                            JOptionPane.showMessageDialog(null, "The mobile phone is not deleted");
                            a = 1;
                            break;
                        } else if (reply == JOptionPane.CANCEL_OPTION) {
                            JOptionPane.showMessageDialog(null, "The mobile phone details are not deleted");
                            a = 1;
                            break;
                        } else {
                        }
                    }


                } while (res.next());
                if (a == 0) {
                    JOptionPane.showMessageDialog(null, "The mobile phone does not exists in the database");
                }
            }
            co.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "the error is" + e);
        }

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        new BillGeneration();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        String searchbill = JOptionPane.showInputDialog(null, "Enter the Bill Id to search");
        while (searchbill.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Bill Id");
            searchbill = JOptionPane.showInputDialog(null, "Enter the Bill Id to search");
        }
        try {

            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection con = DriverManager.getConnection("jdbc:odbc:mobileDSN", "scott", "tiger");
                    Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newbill");
            Boolean rec = res.next();
            if (!rec) {
                JOptionPane.showMessageDialog(null, "There are no Bills exists");
            } else {
                do {
                    String dbid = res.getString(1);
                    if (searchbill.equals(dbid)) {
                        BillGeneration bg = new BillGeneration();
                        bg.jTextField1.setText(dbid);
                        bg.jTextField2.setText(res.getString(2));
                        bg.jTextField3.setText(res.getString(3));
                        bg.jTextField6.setText(res.getString(4));
                        bg.jTextField7.setText(res.getString(5));
                        
                        bg.jTextArea1.setText("Phone Name \tPhone Price \tPhone Color \tIMEI Number \n-------" +
                                         "--------------------------------------------------------------------------");
                        bg.jTextArea1.append(res.getString(6));
                        bg.jPanel1.setVisible(false);
                        bg.jButton2.setVisible(false);
                        bg.jTextField7.setEditable(false);
                        bg.jTextField3.setEditable(false);

                        bg.jLabel2.setBounds(280, 110, 130, 30);
                        bg.jTextField1.setBounds(460, 110, 130, 30);
                        bg.jLabel3.setBounds(280, 170, 130, 30);
                        bg.jTextField2.setBounds(460, 170, 130, 30);
                        bg.jLabel4.setBounds(280, 230, 130, 30);
                        bg.jTextField3.setBounds(460, 230, 130, 30);
                        bg.jLabel8.setBounds(280, 290, 130, 30);
                        bg.jScrollPane1.setBounds(460, 290, 410, 160);
                        bg.jLabel9.setBounds(280, 480, 130, 30);
                        bg.jTextField6.setBounds(460, 480, 130, 30);
                        bg.jLabel10.setBounds(280, 540, 130, 30);
                        bg.jTextField7.setBounds(460, 540, 130, 30);
                        bg.jButton1.setBounds(430, 620, 100, 40);

                        bg.jLabel1.setText("Search Results");
                        bg.jLabel8.setText("Mobiles Purchased");
                        bg.jButton1.setText("CLOSE");
                        bg.setTitle("Search Bill");
                        bg.flag = 1;
                        f = 1;
                    }
                } while (res.next());

                if (f == 0) {
                    JOptionPane.showMessageDialog(null, "The Bill Id does not exists");
                }
                co.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The error is :" + e);
        }


    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        new SearchCustomer();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        cid = JOptionPane.showInputDialog(null, "Enter Customer Id");
        while (cid.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter Customer Id");
            cid = JOptionPane.showInputDialog(null, "Enter Customer Id to Search");
        }
        try {
            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection con = DriverManager.getConnection("jdbc:odbc:mobileDSN", "scott", "tiger");
                    Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newcustomer_details");
            Boolean rec = res.next();
            if (!rec) {
                JOptionPane.showMessageDialog(null, "There are no customer EXISTS");
            } else {
                do {
                    cid1 = res.getString(1);
                    if (cid.equalsIgnoreCase(cid1)) {
                        CreditCustomer cc = new CreditCustomer();

                        cc.jTextField1.setText(cid1);
                        cc.jTextField2.setText(res.getString(2));
                        String dt = res.getString(3);

                        String dd = dt.toString();
                        String year = dd.substring(0, 4);
                        String month = dd.substring(5, 7);
                        String day = dd.substring(8, 10);

                        if (month.equals("01")) {
                            mc1 = "jan";
                        } else if (month.equals("02")) {
                            mc1 = "feb";
                        } else if (month.equals("03")) {
                            mc1 = "mar";
                        } else if (month.equals("04")) {
                            mc1 = "apr";
                        } else if (month.equals("05")) {
                            mc1 = "may";
                        } else if (month.equals("06")) {
                            mc1 = "jun";
                        } else if (month.equals("07")) {
                            mc1 = "jul";
                        } else if (month.equals("08")) {
                            mc1 = "aug";
                        } else if (month.equals("09")) {
                            mc1 = "sep";
                        } else if (month.equals("10")) {
                            mc1 = "oct";
                        } else if (month.equals("11")) {
                            mc1 = "nov";
                        } else if (month.equals("12")) {
                            mc1 = "dec";
                        }
                        String date = day;
                        date += "-";
                        date += mc1;
                        date += "-";
                        date += year;
                        cc.jTextField3.setText(date);
                        cc.jTextField4.setText(Integer.toString(res.getInt(4)));
                        cc.jTextField5.setText(Integer.toString(res.getInt(5)));
                        cc.jTextField6.setText(Integer.toString(res.getInt(6)));

                        String dob = res.getString(7);
                        String ddob = dob.toString();
                        String year2 = ddob.substring(0, 4);
                        String month2 = ddob.substring(5, 7);
                        String day2 = ddob.substring(8, 10);

                        if (month2.equals("01")) {
                            mc = "jan";
                        } else if (month2.equals("02")) {
                            mc = "feb";
                        } else if (month2.equals("03")) {
                            mc = "mar";
                        } else if (month2.equals("04")) {
                            mc = "apr";
                        } else if (month2.equals("05")) {
                            mc = "may";
                        } else if (month2.equals("06")) {
                            mc = "jun";
                        } else if (month2.equals("07")) {
                            mc = "jul";
                        } else if (month2.equals("08")) {
                            mc = "aug";
                        } else if (month2.equals("09")) {
                            mc = "sep";
                        } else if (month2.equals("10")) {
                            mc = "oct";
                        } else if (month2.equals("11")) {
                            mc = "nov";
                        } else if (month2.equals("12")) {
                            mc = "dec";
                        }

                        cc.jComboBox1.setSelectedItem(day2);
                        cc.jComboBox2.setSelectedItem(mc);
                        cc.jComboBox3.setSelectedItem(year2);
                        cc.jTextField7.setText(Integer.toString(res.getInt(8)));

                        String gender = res.getString(9);
                        if (gender.equalsIgnoreCase("male")) {
                            cc.jRadioButton1.setSelected(true);
                        } else if (gender.equalsIgnoreCase("female")) {
                            cc.jRadioButton2.setSelected(true);
                        }

                        cc.jTextField8.setText(res.getString(10));
                        cc.jTextField9.setText(res.getString(11));
                        cc.jTextField10.setText(res.getString(12));
                        cc.jTextField11.setText(res.getString(13));
                        cc.jTextField12.setText(res.getString(14));
                        cc.jTextArea1.setText(res.getString(15));
                        cc.jTextField13.setVisible(false);
                        cc.jTextField14.setVisible(false);
                        cc.jLabel25.setVisible(false);
                        cc.jLabel26.setVisible(false);
                        cc.jLabel1.setText("Update Customer Details");
                        cc.jButton1.setText("Update Customer Details");
                        cc.flag = 3;

                        c = 1;
                        break;
                    }

                } while (res.next());
                if (c == 0) {
                    JOptionPane.showMessageDialog(null, "The customer id does not exists");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The error is" + e);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        cid = JOptionPane.showInputDialog(null, "Enter Customer Id");
        while (cid.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter Customer Id");
            cid = JOptionPane.showInputDialog(null, "Enter Customer Id to Search");
        }
        try {
            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection con = DriverManager.getConnection("jdbc:odbc:mobileDSN", "scott", "tiger");
                    Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newcustomer_details");
            Boolean rec = res.next();
            if (!rec) {
                JOptionPane.showMessageDialog(null, "There are no customer");
            } else {
                do {
                    cid1 = res.getString(1);
                    if (cid.equalsIgnoreCase(cid1)) {
                        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want delete this customer");

                        if (reply == JOptionPane.YES_OPTION) {
                            PreparedStatement prp = co.prepareStatement("delete * from newcustomer_details where cid=" +"'"+cid+"'");
                            prp.executeUpdate();
                            JOptionPane.showMessageDialog(null, "The Customer Details Deleted Successfully");
                        } else if (reply == JOptionPane.NO_OPTION) {
                            JOptionPane.showMessageDialog(null, "The customer details are not deleted");
                        } else if (reply == JOptionPane.CANCEL_OPTION) {
                            JOptionPane.showMessageDialog(null, "The customer details are not deleted");
                        }
                        d = 1;
                        break;
                    }
                } while (res.next());
                if (d == 0) {
                    JOptionPane.showMessageDialog(null, "The Customer Id is not exists in the database");
                }
               
                co.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The error is:" + e);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        int creditpayid;
        String creditpayid1 = JOptionPane.showInputDialog(null, "Enter Customer Id");
        while (creditpayid1.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter Customer Id");
            creditpayid1 = JOptionPane.showInputDialog(null, "Enter Customer Id");
        }

        try
        {
            System.out.println(creditpayid1);
            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection con = DriverManager.getConnection("jdbc:odbc:mobileDSN", "scott", "tiger");
                    Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newcustomer_details where cid="+"'"+creditpayid1+"'");
            Boolean rec = res.next();
            if (rec == false)
            {
                JOptionPane.showMessageDialog(null, "There are no records");
            } 
            else
            {
                do
                {
                    int dcid = Integer.parseInt(res.getString(1));
                    String dcname = res.getString(2);
                    int dpaidamt = Integer.parseInt(res.getString(4));
                    int dbalamt = Integer.parseInt(res.getString(5));
                    int drefid = Integer.parseInt(res.getString(6));
                    
                    String dmob_purchase = res.getString(15);

                    creditpayid = Integer.parseInt(creditpayid1);

                    if (creditpayid == dcid)
                    {

                        int creditpay = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter the Amount that Customer want to Pay"));
                        while(creditpay<500)
                        {
                            JOptionPane.showMessageDialog(null,"The Installment Payment should be Greater than or equal to 500");
                            creditpay = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter the Amount that Customer want to Pay"));
                        }
                        System.out.println(creditpay+","+dpaidamt);
                        int totalbal =dbalamt-creditpay;
                        int pmt=dpaidamt+creditpay;
                        String spmt=Integer.toString(pmt);
                        String stbal=Integer.toString(totalbal);
                        String sid=Integer.toString(creditpayid);

                        //PreparedStatement prp = con.prepareStatement("update newcustomer_details set pdate=?,paidamt=?,balamt=? where cid=?");
                        Statement prp1=co.createStatement();
                        //ResultSet prp=prp1.executeQuery("update newcutomer_details set pdate="+"'"+date1+"'"+","+"paidamt="+"'"+spmt+"'"+'","+balamt="+"'"+stbal+"'"" where cid="+"'"+sid+"'"+");
                        int prp=prp1.executeUpdate("update newcustomer_details set pdate="+"'"+date1+"'"+","+"paidamt="+"'"+spmt+"'"+","+"balamt="+"'"+stbal+"'"+" where cid="+"'"+sid+"'");
                        System.out.println(prp);
                        //prp.setString(1,date1);
                        //prp.setString(2,Integer.toString(dpaidamt+creditpay));
                        //prp.setString(3,Integer.toString(totalbal));
                        //prp.setString(4, Integer.toString(dcid));
                        //prp.executeUpdate();

                        JOptionPane.showMessageDialog(null, dcname + " Remaining Balance Amount is: " + totalbal);
                        int reply = JOptionPane.showConfirmDialog(null, "Do you want to print the Bill");
                        if (reply == JOptionPane.YES_OPTION)
                        {

                            PrintPreview pp=new PrintPreview();
                            pp.jLabel3.setText(Integer.toString(bid));
                            pp.jLabel5.setText(date1);
                            pp.jLabel7.setText(dcname);
                            pp.jLabel10.setText("Amount Paid:");
                            pp.jLabel11.setText(Integer.toString(creditpay));
                            pp.jLabel12.setText("Remaining Balance:");
                            pp.jLabel13.setText(Integer.toString(totalbal));
                            pp.jTextArea1.setText(dmob_purchase);
                            pp.flag=1;
                        }
                        else if (reply == JOptionPane.NO_OPTION)
                        {
                        } 
                        else if (reply == JOptionPane.CANCEL_OPTION)
                        {
                        }
                        g = 1;


                    }
                }
                while (res.next());
                if (g == 0)
                {
                    JOptionPane.showMessageDialog(null, "The Customer Id does not exists");
                }
            }
           
            co.close();
        } 
        catch(NumberFormatException e)
        {
            
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "The error is : " + e);
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
         int countsales=0,totalamt=0;
        try
        {
            String date = JOptionPane.showInputDialog(null, "Enter Date on which you want the Reports (EX:01-jan-2000)");
            System.out.println("****"+date);
            while(date.equalsIgnoreCase(""))
            {
                JOptionPane.showMessageDialog(null,"Please enter date");
                date = JOptionPane.showInputDialog(null, "Enter Date on which you want the Reports (EX:01-jan-2000)");
            }
            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection con = DriverManager.getConnection("jdbc:odbc:mobileDSN", "scott", "tiger");
                     Connection co;
                    Statement st;
                    Class.forName("com.mysql.jdbc.Driver");
                    co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
                    st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newbill where bdate="+"'"+date+"'");
            Boolean rec = res.next();
            if (rec == false)
            {
                JOptionPane.showMessageDialog(null, "There are no sales on the given date");
            } 
            else
            {
                SalesReports sr=new SalesReports();
                sr.jLabel2.setVisible(false);
                sr.jLabel3.setVisible(false);
                sr.jComboBox1.setVisible(false);
                sr.jComboBox2.setVisible(false);
                sr.jButton3.setVisible(false);
                sr.jScrollPane1.setBounds(60, 70, 910, 510);
                sr.jTextArea1.setText("");
                text="";
                sr.jLabel1.setText("Daily Reports");
                do
                {
                    String dbid = res.getString(1);
                    String dbdate = res.getString(2);
                    String bdate = dbdate;
                    String dcname = res.getString(3);
                    int dprice = Integer.parseInt(res.getString(4));
                    int damtpaid = Integer.parseInt(res.getString(5));
                    String mob_purchased = res.getString(7);
                    countsales++;
                    totalamt+=damtpaid;

                    text+="\n"+dbid+" \t"+bdate+" \t"+dcname+" \t\t"+dprice+" \t"+damtpaid+" \t"+mob_purchased+" \n";
                    sr.jTextArea1.setText("Bill Id \tBill Date \tCustomerName \t\tTotalPrice \tAmountPaid \tMobiles Purchased \n"+
                    "-----------------------------------------------------------------------------------------------------" +
                    "-----------------------------------------------------------------------------"+text+"\n--------------------------------------------------------------------------------------------"+
                    "-----------------------------------------------------------------------------\n\n\t\t Total No. Of Sales: "+countsales+"\tTotal Amount Collected: "+totalamt);
                    
                    
                } while(res.next());
                

            }
        } 
        catch(NullPointerException e)
        {

        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,"INVALID DATE!, please follow the Example");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "The error is:" + e);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        SalesReports sr=new SalesReports();
        sr.jLabel1.setText("Monthly Reports");
        sr.flag=0;
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        SalesReports sr=new SalesReports();
        sr.jLabel1.setText("Yearly Reports");
        sr.jLabel2.setVisible(false);
        sr.jComboBox1.setVisible(false);
        sr.flag=1;
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null,"This system is developed for Anmol communication by, Mr.Amit Raut. Contact:9175442533,9604642443");
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      jLabel2.setText("");
        String str=jTextField1.getText();
        int count=0;
         try {
            Connection co;
            Statement st;
            Class.forName("com.mysql.jdbc.Driver");
            co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
            st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newmobile_details where mobile_name="+"'"+str+"'");
            Boolean rec = res.next();
            if (!rec) {
                JOptionPane.showMessageDialog(null, "There is no records in the table");
            } 
            else {
                do{
                   String s3 = res.getString(3);
                    if (str.equalsIgnoreCase(s3)) 
                    {
                        count++;
                    }
                } while (res.next());
                if (count>0) {
                    
                    
                    jLabel2.setText(Integer.toString(count)+" :Mobile(s) remainig in stock.");
                }
                else
                {
                    jLabel2.setText("");
                    JOptionPane.showMessageDialog(null, "No mobiles are remainig in stock..");
                }
            }
            
            st.close();
            co.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The error is:" + e);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jLabel4.setText("");
        String str=jTextField2.getText();
        int count=0;
         try {
            Connection co;
            Statement st;
            Class.forName("com.mysql.jdbc.Driver");
            co = DriverManager.getConnection("jdbc:mysql://localhost:3306/mobile","root","root");
            st = co.createStatement();
            ResultSet res = st.executeQuery("select * from newcustomer_details where cname="+"'"+str+"'");
            Boolean rec = res.next();
            if (!rec) {
                JOptionPane.showMessageDialog(null, "There is no records in the table");
            } 
            else {
                do{
                   String s3 = res.getString(2);
                   int pr=Integer.parseInt(res.getString(4));
                   int bl=Integer.parseInt(res.getString(5));
                   System.out.println(pr);
                   System.out.println(bl);
                    if (str.equalsIgnoreCase(s3)) 
                    {
                        count=bl;
                    }
                } while (res.next());
                if (count>0) {
                    
                    jLabel4.setText("Remainig payment: "+Integer.toString(count));
                }
                else
                {
                    jLabel4.setText("");
                    JOptionPane.showMessageDialog(null, "No any payments are remainig..");
                }
            }
            st.close();
            co.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The error is:" + e);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Home().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
